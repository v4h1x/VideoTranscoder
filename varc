#!/bin/bash

IN="/Downloads/in"
OUT="/Downloads/out"
LL="/Downloads/log"
GPU=0

fileHandler(){
if [[ ! $(find "$f" -mmin 0.2) ]]; then
case "${f: -4}" in
	".mp4"|".mkv"|".mpg"|".avi"|".wmv")
		fix=$(echo ${f%.*}.log | sed s/\\//./g)
		fixLoc=$(echo "${LL}/${fix}")
		ls $LL | grep -qwE "(^|\s)${fix%}"
		if [ $? -ne 0 ] ; then
		access=1
		else
		access=0
		fi
		;;
	*)
		access=0
		;;
esac
else
access=0
fi
}

formatCheck(){
info=$(VHXTranscoder -v 32 -i ${f} 2>&1- )
dimension=$(echo $info | egrep -o '[0-9]{3,4}x[0-9]{3,4}' )

width=$(echo $dimension | egrep -o 'x[0-9]{3,4}' )
width=${width//x}
progressive=$(echo $info | grep -c progressive )
hevc=$(echo $info | grep -c hevc )
h264=$(echo $info | grep -c h264 )
mpeg2=$(echo $info | grep -c mpeg2video )
m10=$(echo $info | grep -c "Main 10" )
}


scaleSelector(){
scale="scale_npp=w=1920:h=1080:interp_algo=16" && bitrateVideo=20M && bitrateAudio=256K && outd="1920x1080" && yadif="" && fps=""
if [[ $width -ge 1800 ]]; then
scale="scale_npp=w=3840:h=2160:interp_algo=16" && bitrateVideo=40M && bitrateAudio=320K && outd="3840x2160"
elif [[ $width -le 800 ]] ; then
scale="scale_npp=w=1280:h=720:interp_algo=16" bitrateVideo=10M && bitrateAudio=160K && outd="1280x720"
fi

uhd=$(echo $f | grep -c 2160p )
fhd=$(echo $f | grep -c 1080p )
hd=$(echo $f | grep -c 720p )
low=$(echo $f | grep -c lowres )
if [[ $uhd -ne 0 ]]; then
scale="scale_npp=w=3840:h=2160:interp_algo=16" && bitrateVideo=40M && bitrateAudio=320K && outd="3840x2160"
elif [[ $fhd -ne 0 ]] ; then
scale="scale_npp=w=1920:h=1080:interp_algo=16" && bitrateVideo=20M && bitrateAudio=256K && outd="1920x1080"
elif [[ $hd -ne 0 ]] ; then
scale="scale_npp=w=1280:h=720:interp_algo=16" && bitrateVideo=10M && bitrateAudio=160K && outd="1280x720"
elif [[ $low -ne 0 ]] ; then
scale="scale_npp=w=512:h=288:interp_algo=16" && bitrateVideo=500K && bitrateAudio=32K && outd="512x288"
if [[ $progressive -ne 0 ]]; then
fps="fps=fps=25,"
fi
fi

if [[ $progressive -eq 0 ]]; then
yadif="yadif_cuda=1:0:0,"
if [[ $low != 0 ]] ; then
yadif="yadif_cuda=0:0:0,"
fi
fi
}

loger(){
touch $fixLoc
echo -ne "filename is " ${f} "\n" > $fixLoc
echo -ne "input Dimension is " ${dimension} "\n" >> $fixLoc
echo -ne "output Dimension is " ${outd} "\n" >> $fixLoc
}

transcode(){
VHXTranscoder -y -v 32 -i ${f} -vf ${fps}format=pix_fmts=yuv420p,hwupload_cuda=device=${GPU},${yadif}${scale},sharpen_npp -map 0:v -map 0:a:0 -map_metadata -1 -c:v h264_nvenc -gpu ${GPU} -preset:v 18 -rc 2 -cbr 1 -g 100 -temporal-aq 1 -profile:v 2 -bf:v 4 -b_ref_mode 2 -strict_gop 1 -b:v ${bitrateVideo} -c:a libfdk_aac -b:a ${bitrateAudio} -sn -f mp4 ${OUT}/"${fix%.*}".mp4
}

#####PROGRESS##SECTION#####

cd $IN
for f in `ls -ctr *.* */*.*`
do
fileHandler
if [[ $access -eq 1 ]]; then
formatCheck
scaleSelector
loger
transcode
fi
done